/*
buildscript {
    apply from: '../../tools.gradle'
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_build_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$gradle_bintray_version"
        classpath "com.github.dcendents:android-maven-gradle-plugin:$gradle_maven_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_plugin_version"
    }
}
*/
//apply from: '../../projects.gradle'

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    github = 'https://github.com/kevindmoore/tasker'
    githubUrl = 'https://github.com/kevindmoore/tasker.git'
    projName = 'taskerlibrary'
    projDescription = 'Library for UI and background tasks'
    currentVersionCode = 9
    currentVersion = '1.0.9'
    groupId = 'com.mastertechsoftware.tasker'
    buildPath = 'com/mastertechsoftware/tasker/taskerlibrary/' + currentVersion
}

repositories {
    maven {
        url  "https://dl.bintray.com/kevindmoore/tasker"
    }
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode currentVersionCode
        versionName currentVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation libLogging
//    compile project(':logging')
    implementation libKotlin
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}


task generateJavadocs(type: Javadoc) {
    excludes = ['**/*.kt']
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
    classpath += project.files(configurations.compile)
    failOnError false
}


task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs


artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}


install {
    repositories.mavenInstaller {

        pom.project {
            name projName
            description projDescription
            url github
            inceptionYear '2016'

            packaging 'aar'
            groupId groupId
            artifactId projName
            version currentVersion

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection githubUrl
                url github

            }
            developers {
                developer {
                    name 'Kevin Moore'
                }
            }
        }
    }
}

group = groupId
version = currentVersion


bintray {
    user = bintray_user
    key = bintray_key
    filesSpec {
        from ('build/libs') {
            include '*.jar'
            rename ("tasker-" + currentVersion + "-(.*)\\.jar", projName + '-' + currentVersion + "-\$1.jar")
        }
        into buildPath
        from ('build/outputs/aar') {
            include 'tasker-release.aar'
            rename {projName + '-' + currentVersion + ".aar"}
        }
        into buildPath
        from ('build/poms') {
            include '*.xml'
            rename {projName + '-' + currentVersion + ".pom"}
        }
        into buildPath
    }
//    dryRun = false //Whether to run this as dry-run, without deploying
//    configurations = ['archives']
//    override = true
    pkg {
        repo = 'maven'
        name = projName

        labels = ['android']
        licenses = ['Apache-2.0']
        vcsUrl = githubUrl
        websiteUrl = github
//        version {
//            name = currentVersion
//            desc = projDescription
//            released  = new Date()
//            vcsTag = currentVersion
//        }
    }
}

//bintray.dependsOn install
//install.dependsOn assemble
